machine:
  environment:
    CONTAINER_NAME: quay.io/redsift/sandbox-python
    PYTHON_VERSIONS: 2.7 3
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker

dependencies:
  override:
    - docker info
    - ./install.sh
    - |
      set -e
      for PV in $PYTHON_VERSIONS
      do
        docker build --build-arg version=$PV -t $PV .
      done
      
test:
  override:
    - |
      set -e
      # for PV in $PYTHON_VERSIONS
      # do
        # INIT=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.init\" }}" $PV)
        # echo "Calling init = $INIT"
        # docker run -v $PWD/test:/run/dagger/sift $PV $INIT 0
        # ls -A $PWD/test/server/site-packages || true
        # RUN=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.run\" }}" $PV)
        # echo "Calling run = $RUN"
        # docker run -v $PWD/test:/run/dagger/sift -e DRY=true $PV $RUN 0
        # sudo rm -Rf $PWD/test/server/site-packages || true
      # done
  
deployment:
  production:
    branch: master  
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - | 
        set -e
        for PV in $PYTHON_VERSIONS
        do
          PYTHON_VERSION=$(docker run -t $PV --version | tr -d '\r')
          VERSION_ARRAY=($PYTHON_VERSION)
          VERSION=v${VERSION_ARRAY[1]}
          MAJOR_NUMBER=(${VERSION//./ })
          MAJOR_VERSION=$MAJOR_NUMBER
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag $PV:latest $CONTAINER_NAME:$VERSION
          echo "Tagging as $CONTAINER_NAME:$MAJOR_VERSION"
          docker tag $PV:latest $CONTAINER_NAME:$MAJOR_VERSION
          docker push $CONTAINER_NAME
        done
      - ./circle_ci_trigger_build
