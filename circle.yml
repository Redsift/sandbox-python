machine:
  environment:
    CONTAINER_NAME: quay.io/redsift/sandbox-python
    PYTHON_VERSIONS: 2.7 3
    CIRCLE_REVERSE_DEPENDENCIES: sandbox-scipy
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker

dependencies:
  override:
    - docker info
    - ./install.sh
    - |
      set -e
      # Build python2.7
      docker build --build-arg v=2.7 --build-arg t="" -t 2.7 -f Dockerfile .
      # Build python3
      docker build --build-arg v=3 --build-arg t=3 -t python3 -f Dockerfile .
      docker build -t 3 -f Dockerfile-3 .

test:
  override:
    - |
      set -e
      sudo groupadd -g 7438 sandbox
      sudo adduser --system --no-create-home --shell /bin/false -u 7438 -gid 7438 sandbox
      sudo chown -R sandbox:sandbox ${PWD}
      for PV in $PYTHON_VERSIONS
      do
        echo "Testing Python v$PV sandbox"
        INIT=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.install\" }}" $PV)
        echo "Calling init = $INIT"
        docker run -u 7438:7438 -v $PWD/test:/run/sandbox/sift $PV $INIT 0
        ls -A $PWD/test/server/td/site-packages || true
        RUN=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.run\" }}" $PV)
        echo "Calling run = $RUN"
        docker run -u 7438:7438 -v $PWD/test:/run/sandbox/sift:ro -e DRY=true $PV $RUN 0
        sudo rm -Rf $PWD/test/server/td/site-packages || true
      done

deployment:
  production:
    branch: master
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - |
        set -e
        latest=""
        for PV in $PYTHON_VERSIONS
        do
          PYTHON_VERSION=$(docker run -u 7438:7438 -t $PV --version | tr -d '\r' | tr -d '+')
          VERSION_ARRAY=($PYTHON_VERSION)
          VERSION=v${VERSION_ARRAY[1]}
          MAJOR_NUMBER=(${VERSION//./ })
          MAJOR_VERSION=$MAJOR_NUMBER
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag $PV:latest $CONTAINER_NAME:$VERSION
          echo "Tagging as $CONTAINER_NAME:$MAJOR_VERSION"
          docker tag $PV:latest $CONTAINER_NAME:$MAJOR_VERSION
          latest=$PV:latest
        done
        echo "Tagging $latest as $CONTAINER_NAME:latest"
        docker tag $latest $CONTAINER_NAME:latest
        docker push $CONTAINER_NAME
      - ./circle_ci_trigger_build
