#!/bin/bash
set -eu

NV=$1
IS_LATEST=${2:-}

CIRCLE_BRANCH=${CIRCLE_BRANCH/\//-} # fix/sth => fix-sth
tagName=(${CIRCLE_BRANCH/-/ }) # release-1 => release
SUFFIX="-beta"
if [ $tagName == "release" ]; then
  SUFFIX=""
fi
imageName=$CONTAINER_NAME:v$NV$SUFFIX

varg=$(echo $NV | sed "s/\([0-9]\).\([0-9]\).*/\1.\2/")
echo "Setting build-arg v=${varg}"

ptag=${NV/#2*/} # for v2: ptag=""
if [ -n $ptag ]; then
  ptag=${ptag:+3} # for v3 ptag=3
fi
echo "Configuring entrypoint in Dockerfile with t=${ptag}"
sed "s/ENTRYPOINT \[\"\/usr\/bin\/python/&${ptag}/" < Dockerfile > Dockerfile.versioned

echo Building $imageName
docker build --build-arg v=$varg --build-arg t="${ptag}" -t $imageName -f Dockerfile.versioned .

PV=$(docker run -u 7438:7438 -t $imageName --version | tr -d '\r' | tr -d '+')
echo "Container report version: ${PV}"

MAJOR_VERSION=(${NV//./ })
MV_TAG=$CONTAINER_NAME:v$MAJOR_VERSION$SUFFIX
echo "Tagging as $MV_TAG"
docker tag $imageName $MV_TAG

if [[ "$tagName" == "release" ]] && [[ -n "$IS_LATEST" ]]; then
  echo "Tagging as $CONTAINER_NAME:latest"
  docker tag $imageName $CONTAINER_NAME:latest
fi
